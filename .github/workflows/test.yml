name: Test MCP Data Query Server

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev

    - name: Lint with ruff
      run: |
        uv run ruff check src/
        uv run ruff format --check src/

    - name: Test server initialization
      run: |
        uv run python -c "
        from data_query_server.server import DataQueryServer
        import asyncio
        
        async def test():
            server = DataQueryServer()
            await server.initialize()
            print('✅ Server initialized successfully')
            
            # Test dataset loading
            assert 'sales' in server.available_datasets
            assert 'customers' in server.available_datasets
            print('✅ Sample datasets loaded')
            
            # Test SQL query
            result = server.execute_sql('SELECT COUNT(*) as count FROM sales')
            assert result['success'] == True
            assert result['data'][0]['count'] == 100
            print('✅ SQL query execution works')
            
            # Test table info
            info = server.get_table_info('sales')
            assert 'schema' in info
            assert len(info['schema']) == 6  # Expected number of columns
            print('✅ Table info retrieval works')
            
            server.cleanup()
            print('✅ All tests passed!')
        
        asyncio.run(test())
        "

    - name: Run unit tests
      run: |
        uv run pytest tests/test_server.py -v

    - name: Test Docker build
      run: |
        docker build -t data-query-server:test .
        echo "✅ Docker build successful"

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Run security scan with bandit
      run: |
        uv run bandit -r src/ -f json || echo "Security scan completed with warnings"

    - name: Run safety check
      run: |
        uv run safety check || echo "Safety check completed with warnings"
